services:
  backend:
    build: ./backend
    ports:
      - "15000:15000"
    depends_on:
      - redis
    environment:
      - CONNECTION_STRING=${CONNECTION_STRING}
      - REDIS_STRING=${REDIS_STRING}

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
  
  # arcade1:
  #   build: ./arcade
  #   depends_on:
  #     - rabbitmq
  #   environment:
  #     - RABBITMQ_HOST=rabbitmq
  #     - ARCADE_ID=1
  
  # arcade2:
  #   build: ./arcade
  #   depends_on:
  #     - rabbitmq
  #   environment:
  #     - RABBITMQ_HOST=rabbitmq
  #     - ARCADE_ID=2
  
  # arcade3:
  #   build: ./arcade
  #   depends_on:
  #     - rabbitmq
  #   environment:
  #     - RABBITMQ_HOST=rabbitmq
  #     - ARCADE_ID=3

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"    # AMQP
      - "15672:15672"  # UI de administraciÃ³n
      - "1883:1883"    # MQTT
    environment:
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbitmq_management load_definitions "/etc/rabbitmq/definitions.json"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
    command: >
      bash -c "rabbitmq-plugins enable --offline rabbitmq_mqtt && rabbitmq-server"

volumes:
  rabbitmq_data: